---
- hosts: all
  roles:
  - role: jnv.unattended-upgrades
    become: yes
    unattended_origins_patterns:
    - 'origin=Debian,codename=${distro_codename},label=Debian-Security' # security updates
    - 'o=Debian,codename=${distro_codename},label=Debian' # updates including non-security updates
    - 'o=Debian,codename=${distro_codename},a=proposed-updates'
    unattended_mail: 'meszaros.mihaly@kifu.gov.hu'

  - role: geerlingguy.docker
    become: yes

  - role: geerlingguy.certbot
    become: yes
    certbot_create_if_missing: true
    certbot_create_method: standalone
    certbot_admin_email: meszaros.mihaly@kifu.gov.hu
    # the role is dummy and needs anyway a service to stop, so I choosed: "ntp"
    certbot_create_standalone_stop_services: ntp
    certbot_certs:
     - domains:
         - mm.lab.vvc.niif.hu
         - rtc.lab.vvc.niif.hu
         - terefere.lab.vvc.niif.hu
  tasks:
  - name: Replace domain
    lineinfile:
      path: /etc/hosts
      regexp: '^(.*)novalocal(.*)$'
      line: '\1lab.vvc.niif.hu\2'
      backrefs: yes

  - name: Setup
    setup:

  - name: Upgrade all packages to the latest version
    become: yes
    apt:
      name: "*"
      state: latest

  - name: Remove useless packages from the cache
    become: yes
    apt:
      autoclean: yes

  - name: Remove dependencies that are no longer required
    become: yes
    apt:
      autoremove: yes

  - name: install packages
    become: yes
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    with_items:
      - git
      - vim
      - ferm
      - fail2ban

  - name: ferm config
    copy:
      src: ferm.conf
      dest: /etc/ferm/ferm.conf
    notify:
    - restart ferm

  - name: git clone mm
    git:
      repo: 'https://github.com/misi/mm.git'
      dest: /home/debian/mm

  - name: Copy certs
    become: yes
    copy:
      src: "/etc/letsencrypt/live/{{ ansible_fqdn }}/{{ item }}"
      dest: "mm/certs/{{ item }}"
      remote_src: yes      
    with_items:
      - cert.pem
      - privkey.pem

  - name: copy logo
    copy:
      src: logo.svg
      dest: mm/logo/logo.svg

  - name: Run mm container
    become: yes
    shell: ./run.sh
    args:
      chdir: "/home/{{ ansible_user }}/mm"
      executable: /bin/bash

  handlers:
  - name: restart ferm
    service:
      name: ferm
      state: restarted
